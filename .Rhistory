y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = genes.of.interest,
legendPosition = "right",
labSize = 5,
colAlpha = 0.5,
drawConnectors = T
)  + Seurat::NoLegend()
EnhancedVolcano(
toptable = day20.data,
lab = "gene",
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = genes.of.interest,
legendPosition = "right",
labSize = 5,
colAlpha = 0.5,
drawConnectors = T
)
EnhancedVolcano(
toptable = day20.data,
lab = day20.data$gene,
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = genes.of.interest,
legendPosition = "right",
labSize = 6.0,
colAlpha = 0.5,
drawConnectors = T
)  + Seurat::NoLegend()
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = genes.of.interest,
legendPosition = "right",
labSize = 6.0,
colAlpha = 0.5,
drawConnectors = T
)  + Seurat::NoLegend()
input$drawLabels <- T
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = 0.5,
drawConnectors = T
)  + Seurat::NoLegend()
runApp()
runApp()
runApp()
?downloadHandler
runApp()
runApp()
runApp()
dev.off()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggsvae
?ggsave
runApp()
runApp()
input$pointAlpha <- 0.1
!(input$pointAlpha == 1)
!(input$pointAlpha == 1)
input$pointAlpha <- 1
!(input$pointAlpha == 1)
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='a-sol',
token='8EF363FDCD7A805E02468217ED0E2796',
secret='h3by7WmBKTcas7FLAlourc8mMDfbH+hdRMhThLZQ')
rsconnect::deployApp()
install.packages("Enhancedvolcano")
rsconnect::deployApp()
install.packages(ggalt)
install.packages("ggalt")
install.packages("ggalt")
install.packages("ggraster")
runApp()
rsconnect::deployApp()
library(ggalt)
rsconnect::deployApp()
install.packages("ggalt")
install.packages("ggalt")
rsconnect::deployApp()
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = 10
)  + Seurat::NoLegend()
?unit
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(1, "npc")
)  + Seurat::NoLegend()
# construct the volcano plot
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(0.1, "npc")
)
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(0.1, "in")
)  + Seurat::NoLegend()
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(0.5, "in"),
arrowheads = F
)
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(3.5, "in"),
arrowheads = F
)
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(15, "in"),
arrowheads = F
)
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(15, "in"),
labvjust = -1.5,
arrowheads = F
)  + Seurat::NoLegend()
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(1, "in"),
arrowheads = F
)  + Seurat::NoLegend()
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = 6.0,
colAlpha = input$pointAlpha,
drawConnectors = T,
lengthConnectors = unit(0.2, "in"),
arrowheads = F
)
runApp()
runApp()
runApp()
rsconnect::deployApp()
object.size(day20.data)
?bindCache
NoLegend <- function(...) {
no.legend.theme <- theme(
# Remove the legend
legend.position = 'none',
# Validate the theme
validate = TRUE,
...
)
return(no.legend.theme)
}
# construct the volcano plot
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = input$labelSize,
colAlpha = input$pointAlpha,
drawConnectors = T,
arrowheads = F
)  + NoLegend() +
xlim(c(input$xlim*-1, input$xlim))
input$xlim <- 1
# construct the volcano plot
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = input$labelSize,
colAlpha = input$pointAlpha,
drawConnectors = T,
arrowheads = F
)  + NoLegend() +
xlim(c(input$xlim*-1, input$xlim))
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = input$labelSize,
colAlpha = input$pointAlpha,
drawConnectors = T,
arrowheads = F
)  + #NoLegend() +
xlim(c(input$xlim*-1, input$xlim))
View(day20.data)
input$labelSize <- 4
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = input$labelSize,
colAlpha = input$pointAlpha,
drawConnectors = T,
arrowheads = F
)  + #NoLegend() +
xlim(c(input$xlim*-1, input$xlim))
input$xlim <- 5
EnhancedVolcano(
toptable = day20.data,
lab = row.names(day20.data),
x = "log2FoldChange",
y = "padj",
title = "Day 20 Prosensory Cells: IWP2 vs CHIR",
pCutoff = 10^(-input$logpval),
FCcutoff = input$log2FC,
pointSize = input$pointSize,
colCustom = color.key,
selectLab = if(input$drawLabels){genes.of.interest}else{"XYZ"},
legendPosition = "right",
labSize = input$labelSize,
colAlpha = input$pointAlpha,
drawConnectors = T,
arrowheads = F
)  + #NoLegend() +
xlim(c(input$xlim*-1, input$xlim))
genes.of.interest <- c("NR2F2", "RSPO3", "EDN3", "LRP2", "SULF1", "GAS1", "PTCH1", "OTX1",
"TAGLN", "CXCR4", "JAG1", "DLX5", "GPR155", "ACSL4", "MSX1")
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
View(day20.data)
nchar(day20.data$gene)
nchar(day20.data$gene, type = "bytes") %>% sum()
object.size(day20.data$gene)
object.size(day20.data$log2FoldChange)
object.size(day20.data$padj)
genes.of.interest <- list(
Day_20 <- c("NR2F2", "RSPO3", "EDN3", "LRP2", "SULF1", "GAS1", "PTCH1", "OTX1",
"TAGLN", "CXCR4", "JAG1", "DLX5", "GPR155", "ACSL4", "MSX1"),
Day_109 <- c("GATA3", "NR2F1", "INSM1", "HES6", "TMPRSS3", "GNG8", "ZNF503",
"TEKT1", "NEUROD6", "ZBBX", "CD164L2", "PCDH20", "SKOR1", "VEPH1", "TEKT2", "TCTEX1D1")
)
View(genes.of.interest)
runApp()
input$dataset <- "Day_20"
datasets <- list(
Day_20 <- readRDS("data/day20deseq.rds"),
Day_109 <- readRDS("data/day109deseq.rds")
)
vp.data <- datasets[[input$dataset]]
input#dataset
input$dataset
datasets[["Day_20"]]
datasets <- list(
Day_20 = readRDS("data/day20deseq.rds"),
Day_109 = readRDS("data/day109deseq.rds")
)
genes.of.interest <- list(
Day_20 = c("NR2F2", "RSPO3", "EDN3", "LRP2", "SULF1", "GAS1", "PTCH1", "OTX1",
"TAGLN", "CXCR4", "JAG1", "DLX5", "GPR155", "ACSL4", "MSX1"),
Day_109 = c("GATA3", "NR2F1", "INSM1", "HES6", "TMPRSS3", "GNG8", "ZNF503",
"TEKT1", "NEUROD6", "ZBBX", "CD164L2", "PCDH20", "SKOR1", "VEPH1", "TEKT2", "TCTEX1D1")
)
datasets[["Day_20"]]
gene.sets <- list(
Day_20 = c("NR2F2", "RSPO3", "EDN3", "LRP2", "SULF1", "GAS1", "PTCH1", "OTX1",
"TAGLN", "CXCR4", "JAG1", "DLX5", "GPR155", "ACSL4", "MSX1"),
Day_109 = c("GATA3", "NR2F1", "INSM1", "HES6", "TMPRSS3", "GNG8", "ZNF503",
"TEKT1", "NEUROD6", "ZBBX", "CD164L2", "PCDH20", "SKOR1", "VEPH1", "TEKT2", "TCTEX1D1")
)
genes.of.interest <- gene.sets[[input$dataset]]
input$dataset[-1:4]
input$dataset[-(1:4)]
input$dataset
input$dataset %>% strsplit()
input$dataset %>% str()
input$dataset %>% substr()
?substr
input$dataset %>% substr(1, 5)
input$dataset %>% substr(5, nchar(input$dataset))
paste0("Day ",
substr(input$dataset, 5, nchar(input$dataset)),
"Prosensory Cells: IWP2 vs CHIR")
paste0("Day ",
substr(input$dataset, 5, nchar(input$dataset)),
" Prosensory Cells: IWP2 vs CHIR")
if(input$dataset == "Day_20") { " Prosensory" } else { " Hair" }
paste0("Day ",
substr(input$dataset, 5, nchar(input$dataset)),
if(input$dataset == "Day_20") { " Prosensory" } else { " Hair" },
" Cells: IWP2 vs CHIR")
input$dataset <- "Day_109"
paste0("Day ",
substr(input$dataset, 5, nchar(input$dataset)),
if(input$dataset == "Day_20") { " Prosensory" } else { " Hair" },
" Cells: IWP2 vs CHIR")
runApp()
runApp()
View(Day_20)
View(Day_20)
datasets <- list(
Day_20 = readRDS("data/day20deseq.rds"),
Day_109 = readRDS("data/day109deseq.rds")
)
View(datasets$Day_109)
runApp()
c(genes.of.interest, paste0(genes.of.interest, ".r"))
which(vp.data$gene %in% c(genes.of.interest, paste0(genes.of.interest, ".r")))
runApp()
rsconnect::deployApp()
.Machine$double.xmin
datasets <- list(
Day_20 = readRDS("data/day20deseq.rds"),
Day_109 = readRDS("data/day109deseq.rds")
)
View(datasets$Day_20)
library(usethis)
?use_git
install.packages("gitcreds")
library(gitcreds)
gitcreds_set()
